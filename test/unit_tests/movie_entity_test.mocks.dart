// Mocks generated by Mockito 5.4.2 from annotations
// in movie_db/test/unit_tests/movie_entity_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_db/domain/entity/movie.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Movie].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovie extends _i1.Mock implements _i2.Movie {
  MockMovie() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get voteCount => (super.noSuchMethod(
        Invocation.getter(#voteCount),
        returnValue: 0,
      ) as int);
  @override
  bool get video => (super.noSuchMethod(
        Invocation.getter(#video),
        returnValue: false,
      ) as bool);
  @override
  double get popularity => (super.noSuchMethod(
        Invocation.getter(#popularity),
        returnValue: 0.0,
      ) as double);
  @override
  String get originalLanguage => (super.noSuchMethod(
        Invocation.getter(#originalLanguage),
        returnValue: '',
      ) as String);
  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);
  @override
  bool get adult => (super.noSuchMethod(
        Invocation.getter(#adult),
        returnValue: false,
      ) as bool);
  @override
  String get title => (super.noSuchMethod(
        Invocation.getter(#title),
        returnValue: '',
      ) as String);
  @override
  String get originalTitle => (super.noSuchMethod(
        Invocation.getter(#originalTitle),
        returnValue: '',
      ) as String);
  @override
  List<int> get genres => (super.noSuchMethod(
        Invocation.getter(#genres),
        returnValue: <int>[],
      ) as List<int>);
  @override
  String get posterPath => (super.noSuchMethod(
        Invocation.getter(#posterPath),
        returnValue: '',
      ) as String);
  @override
  String get backdropPath => (super.noSuchMethod(
        Invocation.getter(#backdropPath),
        returnValue: '',
      ) as String);
  @override
  String get releaseDate => (super.noSuchMethod(
        Invocation.getter(#releaseDate),
        returnValue: '',
      ) as String);
  @override
  double get voteAverage => (super.noSuchMethod(
        Invocation.getter(#voteAverage),
        returnValue: 0.0,
      ) as double);
  @override
  String get overview => (super.noSuchMethod(
        Invocation.getter(#overview),
        returnValue: '',
      ) as String);
}
