// Mocks generated by Mockito 5.4.2 from annotations
// in movie_db/test/unit_tests/movie_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_db/data/datasource/remote/api_service.dart' as _i3;
import 'package:movie_db/data/model/data_state.dart' as _i2;
import 'package:movie_db/data/model/genre_model.dart' as _i5;
import 'package:movie_db/data/model/movie_model.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataState_0<T> extends _i1.SmartFake implements _i2.DataState<T> {
  _FakeDataState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.DataState<List<_i5.GenreModel>>> getGenreNamesById(
          List<num>? ids) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGenreNamesById,
          [ids],
        ),
        returnValue: _i4.Future<_i2.DataState<List<_i5.GenreModel>>>.value(
            _FakeDataState_0<List<_i5.GenreModel>>(
          this,
          Invocation.method(
            #getGenreNamesById,
            [ids],
          ),
        )),
      ) as _i4.Future<_i2.DataState<List<_i5.GenreModel>>>);
  @override
  _i4.Future<_i2.DataState<List<_i6.MovieModel>>> getMovies(String? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovies,
          [url],
        ),
        returnValue: _i4.Future<_i2.DataState<List<_i6.MovieModel>>>.value(
            _FakeDataState_0<List<_i6.MovieModel>>(
          this,
          Invocation.method(
            #getMovies,
            [url],
          ),
        )),
      ) as _i4.Future<_i2.DataState<List<_i6.MovieModel>>>);
  @override
  _i4.Future<List<_i5.GenreModel>> getAllGenres() => (super.noSuchMethod(
        Invocation.method(
          #getAllGenres,
          [],
        ),
        returnValue: _i4.Future<List<_i5.GenreModel>>.value(<_i5.GenreModel>[]),
      ) as _i4.Future<List<_i5.GenreModel>>);
}
